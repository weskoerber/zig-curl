pub const CurlCode = enum {
    Ok,
    UnsupportedProtocol,
    FailedInit,
    UrlMalformat,
    NotBuiltIn,
    CouldntResolveProxy,
    CouldntResolveHost,
    CouldntConnect,
    WeirdServerReply,
    RemoteAccessDenied,
    FtpAcceptFailed,
    FtpWeirdPassReply,
    FtpAcceptTimeout,
    FtpWeirdPasvReply,
    FtpWeird227Format,
    FtpCantGetHost,
    Http2,
    FtpCouldntSetType,
    PartialFile,
    FtpCouldntRetrFile,
    Obsolete20,
    QuoteError,
    HttpReturnedError,
    WriteError,
    Obsolete24,
    UploadFailed,
    ReadError,
    OutOfMemory,
    OperationTimedout,
    Obsolete29,
    FtpPortFailed,
    FtpCouldntUseRest,
    Obsolete32,
    RangeError,
    HttpPostError,
    SslConnectError,
    BadDownloadResume,
    FileCouldntReadFile,
    LdapCannotBind,
    LdapSearchFailed,
    Obsolete40,
    FunctionNotFound,
    AbortedByCallback,
    BadFunctionArgument,
    Obsolete44,
    InterfaceFailed,
    Obsolete46,
    TooManyRedirects,
    UnknownOption,
    SetoptOptionSyntax,
    Obsolete50,
    Obsolete51,
    GotNothing,
    SslEngineNotfound,
    SslEngineSetfailed,
    SendError,
    RecvError,
    Obsolete57,
    SslCertproblem,
    SslCipher,
    PeerFailedVerification,
    BadContentEncoding,
    Obsolete62,
    FilesizeExceeded,
    UseSslFailed,
    SendFailRewind,
    SslEngineInitfailed,
    LoginDenied,
    TftpNotfound,
    TftpPerm,
    RemoteDiskFull,
    TftpIllegal,
    TftpUnknownid,
    RemoteFileExists,
    TftpNosuchuser,
    Obsolete75,
    Obsolete76,
    SslCacertBadfile,
    RemoteFileNotFound,
    Ssh,
    SslShutdownFailed,
    Again,
    SslCrlBadfile,
    SslIssuerError,
    FtpPretFailed,
    RtspCseqError,
    RtspSessionError,
    FtpBadFileList,
    ChunkFailed,
    NoConnectionAvailable,
    SslPinnedpubkeynotmatch,
    SslInvalidcertstatus,
    Http2Stream,
    RecursiveApiCall,
    AuthError,
    Http3,
    QuicConnectError,
    Proxy,
    SslClientcert,
    UnrecoverablePoll,
    TooLarge,
    EchRequired,
};

pub const CurlError = error{
    UnsupportedProtocol,
    FailedInit,
    UrlMalformat,
    NotBuiltIn,
    CouldntResolveProxy,
    CouldntResolveHost,
    CouldntConnect,
    WeirdServerReply,
    RemoteAccessDenied,
    FtpAcceptFailed,
    FtpWeirdPassReply,
    FtpAcceptTimeout,
    FtpWeirdPasvReply,
    FtpWeird227Format,
    FtpCantGetHost,
    Http2,
    FtpCouldntSetType,
    PartialFile,
    FtpCouldntRetrFile,
    Obsolete20,
    QuoteError,
    HttpReturnedError,
    WriteError,
    Obsolete24,
    UploadFailed,
    ReadError,
    OutOfMemory,
    OperationTimedout,
    Obsolete29,
    FtpPortFailed,
    FtpCouldntUseRest,
    Obsolete32,
    RangeError,
    HttpPostError,
    SslConnectError,
    BadDownloadResume,
    FileCouldntReadFile,
    LdapCannotBind,
    LdapSearchFailed,
    Obsolete40,
    FunctionNotFound,
    AbortedByCallback,
    BadFunctionArgument,
    Obsolete44,
    InterfaceFailed,
    Obsolete46,
    TooManyRedirects,
    UnknownOption,
    SetoptOptionSyntax,
    Obsolete50,
    Obsolete51,
    GotNothing,
    SslEngineNotfound,
    SslEngineSetfailed,
    SendError,
    RecvError,
    Obsolete57,
    SslCertproblem,
    SslCipher,
    PeerFailedVerification,
    BadContentEncoding,
    Obsolete62,
    FilesizeExceeded,
    UseSslFailed,
    SendFailRewind,
    SslEngineInitfailed,
    LoginDenied,
    TftpNotfound,
    TftpPerm,
    RemoteDiskFull,
    TftpIllegal,
    TftpUnknownid,
    RemoteFileExists,
    TftpNosuchuser,
    Obsolete75,
    Obsolete76,
    SslCacertBadfile,
    RemoteFileNotFound,
    Ssh,
    SslShutdownFailed,
    Again,
    SslCrlBadfile,
    SslIssuerError,
    FtpPretFailed,
    RtspCseqError,
    RtspSessionError,
    FtpBadFileList,
    ChunkFailed,
    NoConnectionAvailable,
    SslPinnedpubkeynotmatch,
    SslInvalidcertstatus,
    Http2Stream,
    RecursiveApiCall,
    AuthError,
    Http3,
    QuicConnectError,
    Proxy,
    SslClientcert,
    UnrecoverablePoll,
    TooLarge,
    EchRequired,
};

pub fn checkError(err: anytype) !void {
    switch (@TypeOf(err)) {
        CurlCode => try errorFromCurlCode(err),
        c_uint => try errorFromCurlCode(@enumFromInt(err)),
        else => |x| @compileError("Cannot use type " ++ @typeName(x) ++ " to check cURL errors"),
    }
}

pub fn getErrorMessage(err: CurlError) [:0]const u8 {
    return std.mem.span(c.curl_easy_strerror(@intFromEnum(curlCodeFromError(err))));
}

fn errorFromCurlCode(code: CurlCode) !void {
    return switch (code) {
        .Ok => return,
        .UnsupportedProtocol => error.UnsupportedProtocol,
        .FailedInit => error.FailedInit,
        .UrlMalformat => error.UrlMalformat,
        .NotBuiltIn => error.NotBuiltIn,
        .CouldntResolveProxy => error.CouldntResolveProxy,
        .CouldntResolveHost => error.CouldntResolveHost,
        .CouldntConnect => error.CouldntConnect,
        .WeirdServerReply => error.WeirdServerReply,
        .RemoteAccessDenied => error.RemoteAccessDenied,
        .FtpAcceptFailed => error.FtpAcceptFailed,
        .FtpWeirdPassReply => error.FtpWeirdPassReply,
        .FtpAcceptTimeout => error.FtpAcceptTimeout,
        .FtpWeirdPasvReply => error.FtpWeirdPasvReply,
        .FtpWeird227Format => error.FtpWeird227Format,
        .FtpCantGetHost => error.FtpCantGetHost,
        .Http2 => error.Http2,
        .FtpCouldntSetType => error.FtpCouldntSetType,
        .PartialFile => error.PartialFile,
        .FtpCouldntRetrFile => error.FtpCouldntRetrFile,
        .Obsolete20 => error.Obsolete20,
        .QuoteError => error.QuoteError,
        .HttpReturnedError => error.HttpReturnedError,
        .WriteError => error.WriteError,
        .Obsolete24 => error.Obsolete24,
        .UploadFailed => error.UploadFailed,
        .ReadError => error.ReadError,
        .OutOfMemory => error.OutOfMemory,
        .OperationTimedout => error.OperationTimedout,
        .Obsolete29 => error.Obsolete29,
        .FtpPortFailed => error.FtpPortFailed,
        .FtpCouldntUseRest => error.FtpCouldntUseRest,
        .Obsolete32 => error.Obsolete32,
        .RangeError => error.RangeError,
        .HttpPostError => error.HttpPostError,
        .SslConnectError => error.SslConnectError,
        .BadDownloadResume => error.BadDownloadResume,
        .FileCouldntReadFile => error.FileCouldntReadFile,
        .LdapCannotBind => error.LdapCannotBind,
        .LdapSearchFailed => error.LdapSearchFailed,
        .Obsolete40 => error.Obsolete40,
        .FunctionNotFound => error.FunctionNotFound,
        .AbortedByCallback => error.AbortedByCallback,
        .BadFunctionArgument => error.BadFunctionArgument,
        .Obsolete44 => error.Obsolete44,
        .InterfaceFailed => error.InterfaceFailed,
        .Obsolete46 => error.Obsolete46,
        .TooManyRedirects => error.TooManyRedirects,
        .UnknownOption => error.UnknownOption,
        .SetoptOptionSyntax => error.SetoptOptionSyntax,
        .Obsolete50 => error.Obsolete50,
        .Obsolete51 => error.Obsolete51,
        .GotNothing => error.GotNothing,
        .SslEngineNotfound => error.SslEngineNotfound,
        .SslEngineSetfailed => error.SslEngineSetfailed,
        .SendError => error.SendError,
        .RecvError => error.RecvError,
        .Obsolete57 => error.Obsolete57,
        .SslCertproblem => error.SslCertproblem,
        .SslCipher => error.SslCipher,
        .PeerFailedVerification => error.PeerFailedVerification,
        .BadContentEncoding => error.BadContentEncoding,
        .Obsolete62 => error.Obsolete62,
        .FilesizeExceeded => error.FilesizeExceeded,
        .UseSslFailed => error.UseSslFailed,
        .SendFailRewind => error.SendFailRewind,
        .SslEngineInitfailed => error.SslEngineInitfailed,
        .LoginDenied => error.LoginDenied,
        .TftpNotfound => error.TftpNotfound,
        .TftpPerm => error.TftpPerm,
        .RemoteDiskFull => error.RemoteDiskFull,
        .TftpIllegal => error.TftpIllegal,
        .TftpUnknownid => error.TftpUnknownid,
        .RemoteFileExists => error.RemoteFileExists,
        .TftpNosuchuser => error.TftpNosuchuser,
        .Obsolete75 => error.Obsolete75,
        .Obsolete76 => error.Obsolete76,
        .SslCacertBadfile => error.SslCacertBadfile,
        .RemoteFileNotFound => error.RemoteFileNotFound,
        .Ssh => error.Ssh,
        .SslShutdownFailed => error.SslShutdownFailed,
        .Again => error.Again,
        .SslCrlBadfile => error.SslCrlBadfile,
        .SslIssuerError => error.SslIssuerError,
        .FtpPretFailed => error.FtpPretFailed,
        .RtspCseqError => error.RtspCseqError,
        .RtspSessionError => error.RtspSessionError,
        .FtpBadFileList => error.FtpBadFileList,
        .ChunkFailed => error.ChunkFailed,
        .NoConnectionAvailable => error.NoConnectionAvailable,
        .SslPinnedpubkeynotmatch => error.SslPinnedpubkeynotmatch,
        .SslInvalidcertstatus => error.SslInvalidcertstatus,
        .Http2Stream => error.Http2Stream,
        .RecursiveApiCall => error.RecursiveApiCall,
        .AuthError => error.AuthError,
        .Http3 => error.Http3,
        .QuicConnectError => error.QuicConnectError,
        .Proxy => error.Proxy,
        .SslClientcert => error.SslClientcert,
        .UnrecoverablePoll => error.UnrecoverablePoll,
        .TooLarge => error.TooLarge,
        .EchRequired => error.EchRequired,
    };
}

fn curlCodeFromError(err: CurlError) CurlCode {
    return switch (err) {
        CurlError.UnsupportedProtocol => .UnsupportedProtocol,
        CurlError.FailedInit => .FailedInit,
        CurlError.UrlMalformat => .UrlMalformat,
        CurlError.NotBuiltIn => .NotBuiltIn,
        CurlError.CouldntResolveProxy => .CouldntResolveProxy,
        CurlError.CouldntResolveHost => .CouldntResolveHost,
        CurlError.CouldntConnect => .CouldntConnect,
        CurlError.WeirdServerReply => .WeirdServerReply,
        CurlError.RemoteAccessDenied => .RemoteAccessDenied,
        CurlError.FtpAcceptFailed => .FtpAcceptFailed,
        CurlError.FtpWeirdPassReply => .FtpWeirdPassReply,
        CurlError.FtpAcceptTimeout => .FtpAcceptTimeout,
        CurlError.FtpWeirdPasvReply => .FtpWeirdPasvReply,
        CurlError.FtpWeird227Format => .FtpWeird227Format,
        CurlError.FtpCantGetHost => .FtpCantGetHost,
        CurlError.Http2 => .Http2,
        CurlError.FtpCouldntSetType => .FtpCouldntSetType,
        CurlError.PartialFile => .PartialFile,
        CurlError.FtpCouldntRetrFile => .FtpCouldntRetrFile,
        CurlError.Obsolete20 => .Obsolete20,
        CurlError.QuoteError => .QuoteError,
        CurlError.HttpReturnedError => .HttpReturnedError,
        CurlError.WriteError => .WriteError,
        CurlError.Obsolete24 => .Obsolete24,
        CurlError.UploadFailed => .UploadFailed,
        CurlError.ReadError => .ReadError,
        CurlError.OutOfMemory => .OutOfMemory,
        CurlError.OperationTimedout => .OperationTimedout,
        CurlError.Obsolete29 => .Obsolete29,
        CurlError.FtpPortFailed => .FtpPortFailed,
        CurlError.FtpCouldntUseRest => .FtpCouldntUseRest,
        CurlError.Obsolete32 => .Obsolete32,
        CurlError.RangeError => .RangeError,
        CurlError.HttpPostError => .HttpPostError,
        CurlError.SslConnectError => .SslConnectError,
        CurlError.BadDownloadResume => .BadDownloadResume,
        CurlError.FileCouldntReadFile => .FileCouldntReadFile,
        CurlError.LdapCannotBind => .LdapCannotBind,
        CurlError.LdapSearchFailed => .LdapSearchFailed,
        CurlError.Obsolete40 => .Obsolete40,
        CurlError.FunctionNotFound => .FunctionNotFound,
        CurlError.AbortedByCallback => .AbortedByCallback,
        CurlError.BadFunctionArgument => .BadFunctionArgument,
        CurlError.Obsolete44 => .Obsolete44,
        CurlError.InterfaceFailed => .InterfaceFailed,
        CurlError.Obsolete46 => .Obsolete46,
        CurlError.TooManyRedirects => .TooManyRedirects,
        CurlError.UnknownOption => .UnknownOption,
        CurlError.SetoptOptionSyntax => .SetoptOptionSyntax,
        CurlError.Obsolete50 => .Obsolete50,
        CurlError.Obsolete51 => .Obsolete51,
        CurlError.GotNothing => .GotNothing,
        CurlError.SslEngineNotfound => .SslEngineNotfound,
        CurlError.SslEngineSetfailed => .SslEngineSetfailed,
        CurlError.SendError => .SendError,
        CurlError.RecvError => .RecvError,
        CurlError.Obsolete57 => .Obsolete57,
        CurlError.SslCertproblem => .SslCertproblem,
        CurlError.SslCipher => .SslCipher,
        CurlError.PeerFailedVerification => .PeerFailedVerification,
        CurlError.BadContentEncoding => .BadContentEncoding,
        CurlError.Obsolete62 => .Obsolete62,
        CurlError.FilesizeExceeded => .FilesizeExceeded,
        CurlError.UseSslFailed => .UseSslFailed,
        CurlError.SendFailRewind => .SendFailRewind,
        CurlError.SslEngineInitfailed => .SslEngineInitfailed,
        CurlError.LoginDenied => .LoginDenied,
        CurlError.TftpNotfound => .TftpNotfound,
        CurlError.TftpPerm => .TftpPerm,
        CurlError.RemoteDiskFull => .RemoteDiskFull,
        CurlError.TftpIllegal => .TftpIllegal,
        CurlError.TftpUnknownid => .TftpUnknownid,
        CurlError.RemoteFileExists => .RemoteFileExists,
        CurlError.TftpNosuchuser => .TftpNosuchuser,
        CurlError.Obsolete75 => .Obsolete75,
        CurlError.Obsolete76 => .Obsolete76,
        CurlError.SslCacertBadfile => .SslCacertBadfile,
        CurlError.RemoteFileNotFound => .RemoteFileNotFound,
        CurlError.Ssh => .Ssh,
        CurlError.SslShutdownFailed => .SslShutdownFailed,
        CurlError.Again => .Again,
        CurlError.SslCrlBadfile => .SslCrlBadfile,
        CurlError.SslIssuerError => .SslIssuerError,
        CurlError.FtpPretFailed => .FtpPretFailed,
        CurlError.RtspCseqError => .RtspCseqError,
        CurlError.RtspSessionError => .RtspSessionError,
        CurlError.FtpBadFileList => .FtpBadFileList,
        CurlError.ChunkFailed => .ChunkFailed,
        CurlError.NoConnectionAvailable => .NoConnectionAvailable,
        CurlError.SslPinnedpubkeynotmatch => .SslPinnedpubkeynotmatch,
        CurlError.SslInvalidcertstatus => .SslInvalidcertstatus,
        CurlError.Http2Stream => .Http2Stream,
        CurlError.RecursiveApiCall => .RecursiveApiCall,
        CurlError.AuthError => .AuthError,
        CurlError.Http3 => .Http3,
        CurlError.QuicConnectError => .QuicConnectError,
        CurlError.Proxy => .Proxy,
        CurlError.SslClientcert => .SslClientcert,
        CurlError.UnrecoverablePoll => .UnrecoverablePoll,
        CurlError.TooLarge => .TooLarge,
        CurlError.EchRequired => .EchRequired,
    };
}

const std = @import("std");
const util = @import("util.zig");
const c = util.c;
